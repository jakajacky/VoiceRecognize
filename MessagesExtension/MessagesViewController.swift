//
//  MessagesViewController.swift
//  MessagesExtension
//
//  Created by xqzh on 16/10/21.
//  Copyright © 2016年 xqzh. All rights reserved.
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController{
  
  var message:NSString!
  
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }
  
  @IBAction func startVoice(_ sender: AnyObject) {
    //显示SDK的版本号
    print("version=%@", IFlySetting.getVersion())
    
    //打开输出在console的log开关
    IFlySetting.showLogcat(false)
    
    //设置sdk的工作路径
    let paths = NSSearchPathForDirectoriesInDomains(.cachesDirectory, .userDomainMask, true)
    let cachePath =  paths[0]
    IFlySetting.setLogFilePath(cachePath)
    
    let initString = NSString(format: "appid=%@", "5809e0e2") as String
    IFlySpeechUtility.createUtility(initString);
    
    let vc = EchoViewController()
    vc.message = {
      str in
      print("语音结果：\(str)")
      
      let conversation = self.activeConversation
      let layout = MSMessageTemplateLayout()
      
      layout.caption = "Stepper Value"
      
      let message = MSMessage()
      message.layout = layout
      message.url = URL(string: "www.baidu.com")
      
      conversation?.insert(message, completionHandler: { (error) in
        print(error)
      })
//      conversation?.insertText(str as String, completionHandler: nil)
    }
    self.present(vc, animated: true) {
      
    }
  }
  

}
